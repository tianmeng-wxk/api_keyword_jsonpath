{"name": "allure报告标题", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败\nassert 300 == 200", "trace": "self = <test_case.test_cases.TestCase object at 0x0000012B13232108>\nurl = 'http://39.98.138.157:5000/api/addcart'\nbody = '{\"userid\":17890,\"openid\":\"UEHUXUXU78272SDSassDD\",\"productid\":8888}'\nheader = '{\"token\": \"23657DGYUSGD126731638712GE18271H\",\"content-type\": \"application/json\"}'\nmethod = 'post', method_type = 'json', expect_value = 300\njsonpath_value = [200], dependency = 'cartinfo'\n\n    @allure.title(\"allure报告标题\")\n    @pytest.mark.parametrize(\"url, body, header, method, method_type,expect_value, jsonpath_value, dependency\", contents)\n    def test_collection(self, url, body, header, method, method_type,expect_value, jsonpath_value, dependency):\n        self.i = 1\n        Logger().log().info(\"开始运行第{}条用例\", self.i)\n        comon=HttpClien()\n        body = body.replace('\\r', '').replace('\\n', '').replace('\\t', '') if body is not None else \"\"\n        body = Convert().convert(body) if body.find(\"$\") >= 0 else body\n    \n    \n        header = Convert().convert(header) if (header is not None and header.find(\"$\") >= 0) else header\n        header = \"\" if header is None else header\n        res=comon.request(method,url,method_type,body,header)\n        #把放回数据存入字典depend相应key中\n        if len(dependency)>0 and dependency.find(\"/\")<0:\n            depend[dependency] = res.content\n        res = res.json()\n        Logger().log().info(\"响应结果：\", res)\n        jsonpath_value = jsonpath.jsonpath(res,jsonpath_value)\n>       assert expect_value == jsonpath_value[0],\"断言失败\"\nE       AssertionError: 断言失败\nE       assert 300 == 200\n\n..\\test_case\\test_cases.py:41: AssertionError"}, "attachments": [{"name": "log", "source": "8f0763ad-c6e6-408a-84b0-c03fab54d627-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'http://39.98.138.157:5000/api/addcart'"}, {"name": "body", "value": "'{\"userid\":$uservar.data[0].userid$,\"openid\":\"$uservar.data[0].openid$\",\"productid\":$productvar.data[0].productid$}'"}, {"name": "header", "value": "'{\"token\": \"$loginvar.token$\",\"content-type\": \"application/json\"}'"}, {"name": "method", "value": "'post'"}, {"name": "method_type", "value": "'json'"}, {"name": "expect_value", "value": "300"}, {"name": "jsonpath_value", "value": "'$.httpstatus'"}, {"name": "dependency", "value": "'cartinfo'"}], "start": 1614943262335, "stop": 1614943262460, "uuid": "4b3667f1-3be1-42c7-9031-df2059622ca9", "historyId": "440714ad242cba9eb6c205525fb3f820", "testCaseId": "17cbcaab19e77428930b197aedf01c3b", "fullName": "test_case.test_cases.TestCase#test_collection[http://39.98.138.157:5000/api/addcart-{\"userid\":$uservar.data[0].userid$,\"openid\":\"$uservar.data[0].openid$\",\"productid\":$productvar.data", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_cases"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "LAPTOP-JHEF7VRV"}, {"name": "thread", "value": "5104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_cases"}]}